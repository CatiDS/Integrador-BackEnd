*************************************************************************************************************************************
RESERVA:
MOSTAR TODAS LAS RESERVAS:  get
http://localhost:8080/reserva/   

CREAR RESERVA:      post
http://localhost:8080/reserva/      
recibo del front el body                             

{
    "fecha_res": "",
    "usuario_res": "",
    "nombre": "",
    "apellido": "",
    "nro_tel": ,
    "cant_personas":
}

MODIFICAR RESERVA:   put
http://localhost:8080/reserva/:id_reserva  
recibo del front (req.params.id_reserva,req.body)
{
	"fecha_res": "",
    "apellido": "",
    "nombre": "",
    "nro_tel": ,
    "cant_personas": 
}        ****VER SI QUIERO QUE ACTUALICE LA FECHA DE MODIFICACION*****

CANCELAR RESERVA: delete 
http://localhost:8080/reserva/cancelar/:id_reserva 
recibo del front id_reserva (eq.params.id_reserva)

FINALIZAR RESERVA: put
http://localhost:8080/reserva/finalizar/:id_reserva 
recibo del front id_reserva (req.params.id_reserva)

BUSCAR POR ID DE USUARIO:   get
http://localhost:8080/reserva/buscar/:id_usuario 
recibo del front id_usuario (req.params.id_usuario)

BUSCAR POR APELLIDO:   get    
http://localhost:8080/reserva/buscar/apellido/:apellido 
recibo del front apellido (req.params.apellido)      

BUSCAR POR NRO TELEFONO:    get
http://localhost:8080/reserva/buscar/telefono/:nro_tel      
recibo del front nro_tel (req.params.nro_telg)                      

  

**********************************************************************************************************************************************
MESA:
CREAR MESA:  post
http://localhost:8080/mesa/
recibo del front (req.body) con los datos
{
    "nro_mesa": ,
    "lugares": 
}

LISTAR MESAS: get 
http://localhost:8080/mesa/  

MODIFICAR MESA: put
http://localhost:8080/mesa/modificar/:id_mesa
recibo del front (req.params.id_mesa,req.body) id_mesa , body con cambios
{
    "nro_mesa": ,
    "lugares": ,
    "disponible": ""
}

ELIMINAR MESA: delete
http://localhost:8080/mesa/eliminar/:id_mesa
recibo del front (req.params.id_mesa) id_mesa a eliminar 

CAMBIAR A DISPONIBLE:  put
http://localhost:8080/mesa/cambiareEstado/disponible/:id_mesa
recibo del front (req.params.id_mesa) id_mesa

CAMBIAR A NO DISPONIBLE:  put
http://localhost:8080/mesa/cambiareEstado/noDisponible/:id_mesa
recibo del front (req.params.id_mesa) id_mesa

BUSCAR POR NUMERO DE MESA: get
http://localhost:8080/mesa/buscar/:nro_mesa
recibo del front (req.params.nro_mesa) nro_mesa

LISTAR MESAS DISPONIBLES: get
http://localhost:8080/mesa/mesasDisponibles



*************************************************************************************************************************************
USUARIO:
CREAR USUARIO: post
http://localhost:8080/usuario/   
recibo del front body
{
    
    "apellido": "",
    "nombre": "",
    "mail": "",
    "pass": "",
    "nro_tel": 
}

LISTAR USUARIO: get
http://localhost:8080/usuario/


MODIFICAR USUARIO:  put
http://localhost:8080/usuario/:id_usuario
recibo del front id_usuario, body  (req.params.id_usuario, req.body)

{
    "apellido":"",
    "nombre": "",
    "mail": "",
    "pass": "", 
    "nro_tel": 
}

ELIMINAR USUARIO:  delete
http://localhost:8080/usuario/:id_usuario
recibo del front id_usuario a eliminar (req.params.id_usuario)

BUSCAR POR id_usuario: get
http://localhost:8080/usuario/id/:id_usuario
recibo del front id_usuario (req.params.id_usuario)

BUSCAR POR APELLIDO: get
http://localhost:8080/usuario/apellido/:ape
recibo del front id_usuario (req.params.apellido)

BUSCAR POR MAIL: get
http://localhost:8080/usuario/mail/:mail
recibo del front mail  ( req.params.mail)

MODIFICAR ROL: put
http://localhost:8080/usuario/rol/:id_usuario
recibo del front id_usuario, nuevo rol ingresado.  (req.params.id_usuario, req.body)

LOGIN:  post
http://localhost:8080/usuario/login
recibo del front mail, pass   en el body
  const { mail, pass } = req.body;

{
  "mail":"cati@gmail.com",
  "pass": "clave1234"
}

*******************************************************************************************************************************************
CUENTA:
CREAR CUENTA:   post
http://localhost:8080/cuenta/
recibo del front (req.body)  body     si no tiene reserva recibo en req.body.reserva = null
{
    "reserva": 1,
    "mesa": 16
}

LISTAR CUENTAS: get
http://localhost:8080/cuenta/ 

MODIFICAR CUENTA:   put
http://localhost:8080/cuenta/:id_cuenta
recibo del front (req.params.id_cuenta,req.body)  id_cuenta, body   puedo recibir en req.body.reserva = null
{
    "reserva": null,
    "mesa": 19
}

ELIMINAR CUENTA:    delete
http://localhost:8080/cuenta/:id_cuenta
recibo del front (req.params.id_cuenta)      id_cuenta


BUSCAR POR NRO DE MESA:     get
http://localhost:8080/cuenta/buscar/:nro_mesa
recibo del front (req.params.nro_mesa)   nro_mesa


*********************************************************************************************************************************************
MESA POR CUENTA:
CREAR:      post
http://localhost:8080/mesaPorCuenta/
recibo del front (req.body)  body
{
    "cuenta": ,
    "mesa": 
}

LISTAR:     get
http://localhost:8080/mesaPorCuenta/

MODIFICAR:  put
http://localhost:8080/mesaPorCuenta/:id_mxc
recibo del front (req.params.id_mxc,req.body)   id_mxc a modificar y el body a modificar
{
    "cuenta": 1,
    "mesa": 1
}

LISTAR POR NUMERO DE CUENTA: (asociadas a una cuenta)   get
http://localhost:8080/mesaPorCuenta/nro_cuenta/:cuenta
recibo del front (req.params.cuenta)  numero de cuenta asociada

ELIMINAR:   delete
http://localhost:8080/mesaPorCuenta/:id_mxc 
recibo del front (req.params.id_mxc) id_mxc a eliminar

ELIMINAR POR NUMERO DE CUENTA: (asociadas a una cuenta)     delete
http://localhost:8080/mesaPorCuenta/eliminar/:cuenta
recibo del front (req.params.cuenta)     cuenta o nro de cuenta de la cual quiero eliminar las mesas

CAMBIAR EL ESTADO DE LAS MESAS ASOCIADAS A UNA CUENTA (cambiar a disponible): se utiliza al finalizar cuenta     put
http://localhost:8080/mesaPorCuenta/bajaMesas/:cuenta
recibo del front (req.params.cuenta)  cuenta,(nro_cuenta=id)

********************************************************************************************************************************************
PRODUCTO POR CUENTA:
CREAR:
http://localhost:8080/productoPorCuenta/  post
recibo del front (req.body) body con datos    si no hay observaciones recibo como parametro null
{
    "cuenta": ,
    "producto": ,
    "cantidad": ,
    "observaciones": null ,
    "subtotal": ,
    "cargado_por": 
}

LISTAR: get
http://localhost:8080/productoPorCuenta/

MODIFICAR: put
http://localhost:8080/productoPorCuenta/:id_pxc
recibo del front (req.params.id_pxc,req.body)   id_pxc a modificar y los datos en body

{
    "cuenta": ,
    "producto": ,
    "cantidad": ,
    "observaciones": null ,
    "subtotal": ,
    "cargado_por": 
}

ELIMINAR: delete
http://localhost:8080/productoPorCuenta/:id_pxc
recibo del front (eq.params.id_pxc)    id_pxc a eliminar

LISTAR TODOS ASOCIADOS A UNA CUENTA: get
http://localhost:8080/productoPorCuenta/nro_cuenta/:cuenta
recibo del front (req.params.cuenta)   numero de cuenta del cual quiero listar todos sus productos

ELIMINAR TODOS ASOCIADOS A UNA CUENTA: delete
http://localhost:8080/productoPorCuenta/eliminar/:cuenta
recibo del front (req.params.cuenta)     numero de cuenta del cual quiero eliminar todos los productos cargados

**********************************************************************************************************************************************
PRODUCTOS:
CREAR:   put
http://localhost:8080/producto/
recibo del front (req.body)   los datos en body
{
    "nombre_prod":"Bocha de helado",
    "precio": 1500,
    "categoria": "postres",
    "stock": null
}

LISTAR:  get
http://localhost:8080/producto/

MODIFICAR: put
http://localhost:8080/producto/:id_prod
recibo del front (req.params.id_prod,req.body) id_prod y body con datos
{
    "nombre_prod":"Bocha de helado",
    "precio": 1500,
    "categoria": "postres",
    "stock": null
}

ELIMINAR: delete
http://localhost:8080/producto/:id_prod
recibo del front (req.params.id_prod)   id_prod del producto a eliminar

LISTAR POR CATEGORIA: get
http://localhost:8080/producto/categoria/:categoria
recibo del front (req.params.categoria)  nombre de la categoria





localtunnel 
pag: https://busy-lamps-ring.loca.lt/
pas: 45.228.189.133